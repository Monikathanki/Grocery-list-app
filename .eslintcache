[{"C:\\Users\\Packe\\Desktop\\node projects\\grocery list app\\src\\index.js":"1","C:\\Users\\Packe\\Desktop\\node projects\\grocery list app\\src\\App.js":"2","C:\\Users\\Packe\\Desktop\\node projects\\grocery list app\\src\\Context\\Context.js":"3","C:\\Users\\Packe\\Desktop\\node projects\\grocery list app\\src\\Components\\Header\\Header.js":"4","C:\\Users\\Packe\\Desktop\\node projects\\grocery list app\\src\\Components\\Errorpage\\ErrorPage.js":"5","C:\\Users\\Packe\\Desktop\\node projects\\grocery list app\\src\\Components\\NavBar\\Navbar.js":"6","C:\\Users\\Packe\\Desktop\\node projects\\grocery list app\\src\\Components\\Login\\Login.js":"7","C:\\Users\\Packe\\Desktop\\node projects\\grocery list app\\src\\Components\\ListForm\\ListForm.js":"8","C:\\Users\\Packe\\Desktop\\node projects\\grocery list app\\src\\Components\\Validation\\ValidationError.js":"9","C:\\Users\\Packe\\Desktop\\node projects\\grocery list app\\src\\listData.js":"10","C:\\Users\\Packe\\Desktop\\node projects\\grocery list app\\src\\Components\\Navbar\\Navbar.js":"11","C:\\Users\\Packe\\Desktop\\node projects\\grocery list app\\src\\Components\\BackButton\\BackButton.js":"12","C:\\Users\\Packe\\Desktop\\node projects\\grocery list app\\src\\Components\\CategoriesPage\\CategoriesPage.js":"13","C:\\Users\\Packe\\Desktop\\node projects\\grocery list app\\src\\Components\\EditList\\EditList.js":"14","C:\\Users\\Packe\\Desktop\\node projects\\grocery list app\\src\\Components\\Features\\Features.js":"15","C:\\Users\\Packe\\Desktop\\node projects\\grocery list app\\src\\Components\\Footer\\Footer.js":"16","C:\\Users\\Packe\\Desktop\\node projects\\grocery list app\\src\\Components\\Register\\Register.js":"17","C:\\Users\\Packe\\Desktop\\node projects\\grocery list app\\src\\Components\\Lists\\List.js":"18","C:\\Users\\Packe\\Desktop\\node projects\\grocery list app\\src\\Components\\Modal\\Modal.js":"19","C:\\Users\\Packe\\Desktop\\node projects\\grocery list app\\src\\Components\\GroceryList\\GroceryList.js":"20"},{"size":264,"mtime":1607837392307,"results":"21","hashOfConfig":"22"},{"size":4485,"mtime":1608088536182,"results":"23","hashOfConfig":"22"},{"size":403,"mtime":1607811336357,"results":"24","hashOfConfig":"22"},{"size":1025,"mtime":1607819956872,"results":"25","hashOfConfig":"22"},{"size":589,"mtime":1607744265288,"results":"26","hashOfConfig":"22"},{"size":752,"mtime":1607834945134,"results":"27","hashOfConfig":"22"},{"size":1312,"mtime":1607750990698,"results":"28","hashOfConfig":"22"},{"size":5005,"mtime":1608085635989,"results":"29","hashOfConfig":"22"},{"size":218,"mtime":1607813198273,"results":"30","hashOfConfig":"22"},{"size":1690,"mtime":1607902175337,"results":"31","hashOfConfig":"22"},{"size":1420,"mtime":1607839224416,"results":"32","hashOfConfig":"22"},{"size":261,"mtime":1607909587746,"results":"33","hashOfConfig":"22"},{"size":2581,"mtime":1607844795358,"results":"34","hashOfConfig":"22"},{"size":4258,"mtime":1608013207809,"results":"35","hashOfConfig":"22"},{"size":1298,"mtime":1607956238915,"results":"36","hashOfConfig":"22"},{"size":191,"mtime":1607905084759,"results":"37","hashOfConfig":"22"},{"size":1346,"mtime":1607906930562,"results":"38","hashOfConfig":"22"},{"size":3322,"mtime":1608002132320,"results":"39","hashOfConfig":"22"},{"size":2560,"mtime":1608088063703,"results":"40","hashOfConfig":"22"},{"size":3266,"mtime":1608088252554,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"d8wnue",{"filePath":"45","messages":"46","errorCount":2,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"44"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"44"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"44"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"82","messages":"83","errorCount":2,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"44"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"C:\\Users\\Packe\\Desktop\\node projects\\grocery list app\\src\\index.js",[],["87","88"],"C:\\Users\\Packe\\Desktop\\node projects\\grocery list app\\src\\App.js",["89","90","91","92","93"],"C:\\Users\\Packe\\Desktop\\node projects\\grocery list app\\src\\Context\\Context.js",[],"C:\\Users\\Packe\\Desktop\\node projects\\grocery list app\\src\\Components\\Header\\Header.js",[],"C:\\Users\\Packe\\Desktop\\node projects\\grocery list app\\src\\Components\\Errorpage\\ErrorPage.js",[],"C:\\Users\\Packe\\Desktop\\node projects\\grocery list app\\src\\Components\\NavBar\\Navbar.js",[],"C:\\Users\\Packe\\Desktop\\node projects\\grocery list app\\src\\Components\\Login\\Login.js",[],"C:\\Users\\Packe\\Desktop\\node projects\\grocery list app\\src\\Components\\ListForm\\ListForm.js",["94","95","96","97","98","99","100","101","102","103"],"import React, {Component} from \"react\";\r\nimport Context from \"../../Context/Context\";\r\nimport ValidateionError from \"../Validation/ValidationError\";\r\nimport ListData from \"../../../src/listData\" \r\nimport BackButton from \"../BackButton/BackButton\";\r\nimport \"./ListForm.css\"\r\n\r\nclass ListForm extends Component {\r\n    static ContextType = Context;\r\n\r\n    static defaultProps = {\r\n        match: {\r\n            params: {\r\n                category: \"\",\r\n            }\r\n        }\r\n    }\r\n\r\n    state = {\r\n        selCategory: this.props.match.params.category,\r\n        lists: {\r\n            name: \"\",\r\n            touched: false,\r\n\r\n        }\r\n\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        let name = e.target.name.value;\r\n        let note = e.target.note.value;\r\n        let category = this.state.selCategory;\r\n        let price = e.target.price.value;\r\n        let weight = e.target.weight.value;\r\n        let checked = false\r\n\r\n        let list = this.context.createList(list);\r\n        this.props.history.push(\"/grocery-list\")\r\n\r\n        this.setState ({\r\n            lists : list\r\n        })\r\n\r\n        \r\n        \r\n    }\r\n\r\n    validateName = () => {\r\n        let listName = this.state.name.value.trim();\r\n        if(listName.name === 0) {\r\n            return \"Name your list!\";\r\n\r\n        } else if (listName.length < 3) {\r\n            return \"your list must be at least 3 charecters long\";\r\n        } else if (listName.lenght > 15) {\r\n            return \"your list cannot exceed 15 charecters\";\r\n        }\r\n    };\r\n\r\n    updateList = (name) => {\r\n        this.setState({\r\n            lists: {\r\n\r\n            }\r\n        })\r\n    }\r\n\r\n    changeCategory = (e) => {\r\n        let categoryId = Number(e.target.value);\r\n        let category = this.context.categories.find((c) => c.id === categoryId);\r\n        this.setState ({\r\n            selCategory: category.category,\r\n            category_id: category.id\r\n\r\n        });\r\n    }\r\n\r\n    render() {\r\n        let categories = this.context.category;\r\n        let nameError = this.validateName();\r\n        return(\r\n            <div className=\"add-list\">\r\n                <form className=\"add-list-form\">\r\n                    <h2>\r\n                        Create Grocery list\r\n                    </h2>\r\n                    <div className=\"add-list-section\">\r\n                        <label className=\"list-label\">\r\n                            Name:\r\n\r\n                        </label>\r\n                        <input \r\n                        type=\"text\"\r\n                        name=\"name\"\r\n                        className=\"add-name-input\"\r\n                         />\r\n                             \r\n                         <label className=\"list-label\"\r\n                         >\r\n                             Note:\r\n                         </label>\r\n                         <input className=\"add-note-input\"\r\n                         type=\"text\"\r\n                         name = \"note\"\r\n                         />\r\n                         <label className=\"list-label\"\r\n                         >\r\n                             Price:\r\n                         </label>\r\n                         <input className=\"add-price-input\"\r\n                         type=\"text\"\r\n                         name = \"price\"\r\n                         />\r\n                             <label className=\"list-label\"\r\n                         >\r\n                             Weight:\r\n                        </label>\r\n                         <input className=\"add-Weight-input\"\r\n                         type=\"text\"\r\n                         name = \"weight\"\r\n                         />\r\n                         \r\n                         \r\n                         <select\r\n                         onChange = {(e) => this.changeCategory(e)}\r\n                         name = \"category_id\"\r\n                         id=\"category-dropdown\"\r\n                         >\r\n                             {categories.map((category, index) => (\r\n                                 <option\r\n                                 key={index}\r\n                                 value={category.id}\r\n                                 selected = {\r\n                                     category.category === this.props.match.params.category ? \"selected\" : false\r\n                                 }\r\n                                 >\r\n                                     {category.category}\r\n\r\n                                 </option>\r\n\r\n                             ))}\r\n                            \r\n                        </select>\r\n                        <button className=\"add-list-button\"\r\n                        type=\"submit\"\r\n                        >\r\n                            Create List\r\n\r\n                        </button>\r\n\r\n                    </div>\r\n                </form>\r\n\r\n                <BackButton {...this.props} className=\"back-button\" />\r\n\r\n            </div>\r\n        )\r\n    }\r\n\r\n    \r\n   \r\n}\r\n\r\n\r\nexport default ListForm;","C:\\Users\\Packe\\Desktop\\node projects\\grocery list app\\src\\Components\\Validation\\ValidationError.js",[],"C:\\Users\\Packe\\Desktop\\node projects\\grocery list app\\src\\listData.js",[],"C:\\Users\\Packe\\Desktop\\node projects\\grocery list app\\src\\Components\\Navbar\\Navbar.js",[],"C:\\Users\\Packe\\Desktop\\node projects\\grocery list app\\src\\Components\\BackButton\\BackButton.js",[],"C:\\Users\\Packe\\Desktop\\node projects\\grocery list app\\src\\Components\\CategoriesPage\\CategoriesPage.js",["104"],"import React from \"react\";\r\nimport Context from \"../../Context/Context\";\r\nimport Categories from \"../../../src/listData\"\r\nimport {Link} from \"react-router-dom\"\r\nimport \"./CategoriesPage.css\";\r\n\r\n\r\nclass CategoriesPage extends React.Component {\r\n    static contextType = Context;\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"categories-body\">\r\n                <header className=\"categories-header\">\r\n                    <h1>Choose Grocery List Category: </h1>\r\n\r\n                </header>\r\n                <main>\r\n                    <div className=\"grocery-list-categories\">\r\n                        <div className=\"grocery-list-category veg\">\r\n                            <h2>Vegetables</h2>\r\n                            <button className = \"add-cat-button\">\r\n                                <Link to=\"/add-list/vegetables\">Vegetables</Link>\r\n\r\n                            </button>\r\n\r\n                        </div>\r\n                        <div className=\"grocery-list-category fruits\">\r\n                           <h2>Fruits</h2>\r\n                           <button className=\"add-cat-button\">\r\n                              <Link to=\"/add-list/fruits\">Fruits</Link>\r\n                            </button>\r\n                        </div>\r\n                        <div className=\"grocery-list-category grain\">\r\n                           <h2>Grain</h2>\r\n                           <button className=\"add-cat-button\">\r\n                              <Link to=\"/add-list/Grain\">Grain</Link>\r\n                           </button>\r\n                        </div>\r\n                        <div   className=\"grocery-list-category frozen\">\r\n                           <h2>Frozen</h2>\r\n                           <button className=\"add-cat-button\">\r\n                              <Link to=\"/add-list/frozen\">Frozen</Link>\r\n                            </button>\r\n                        </div>\r\n                         <div   className=\"grocery-list-category mis\">\r\n                           <h2>Miscellaneous</h2>\r\n                           <button className=\"add-cat-button\">\r\n                              <Link to=\"/add-list/Miscellaneous\">Miscellaneous</Link>\r\n                            </button>\r\n                        </div>\r\n                        <button className=\"grocery-list-category btn\">\r\n                         <Link to=\"/grocery-list\">View Your grocery List</Link>\r\n                        </button>\r\n\r\n                    </div>\r\n                </main>\r\n\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default CategoriesPage;\r\n\r\n","C:\\Users\\Packe\\Desktop\\node projects\\grocery list app\\src\\Components\\EditList\\EditList.js",["105","106","107","108","109","110"],"import React from \"react\";\r\nimport ListData from \"../../../src/listData\";\r\nimport Context from \"../../Context/Context\";\r\n\r\n\r\nclass EditList extends React.Component {\r\n    static ContextType = Context;\r\n\r\n    state = {\r\n        id:\"\",\r\n        name: \"\",\r\n        note: \"\",\r\n        price: \"\",\r\n        weight: \"\",\r\n        category: \"\",\r\n        category_id:\"\",\r\n        checked:\"\"\r\n\r\n    };\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        let {\r\n            id,\r\n            name,\r\n            note,\r\n            price,\r\n            weight,\r\n            category,\r\n            checked,\r\n            category_id,\r\n            \r\n\r\n        } = this.state;\r\n        let newList = {\r\n            id,\r\n            name,\r\n            note,\r\n            price,\r\n            weight,\r\n            category,\r\n            checked,\r\n            category_id,\r\n            \r\n        }\r\n        this.resetFields();\r\n        this.context.updateList(newList);\r\n        this.props.history.push(`/gorcery-list/${this.props.match.params.id}`)\r\n         this.setState({newList})\r\n    }\r\n\r\n    resetFields = () => {\r\n        this.setState ({\r\n            id:\"\",\r\n            name: \"\",\r\n            note: \"\",\r\n            price: \"\",\r\n            weight: \"\"\r\n        })\r\n    }\r\n    handleUpdateName = (e) => {\r\n        this.setState({\r\n            name: e.target.value,\r\n\r\n        });\r\n    }\r\n\r\n    handleUpdateNote = (e) => {\r\n        this.setState({\r\n            note: e.target.value,\r\n        })\r\n    }\r\n\r\n    handleupdatePrice = (e) => {\r\n        this.setState({\r\n            price: e.target.value,\r\n        })\r\n    }\r\n\r\n    handleClickCancel = () => {\r\n        this.props.history.push(`/grocery-list/${this.props.match.params.id}`);\r\n    }\r\n\r\n    render() {\r\n        let {id, name, note, price, weight} = this.state;\r\n        return(\r\n            <div className=\"edit-lists\">\r\n                <form onSubmit ={(e) => this.handleSubmit(e)} clasName=\"edit-form\">\r\n                    <h2>Edit List</h2>\r\n                    <div className=\"edit-section\">\r\n                        <label className=\"edit-list-label\">Name: \r\n\r\n                        </label>\r\n                        <input  \r\n                        onChange={(e) => this.handleUpdateName(e)}\r\n                        className=\"edit-list-input\"\r\n                        name = \"name\"\r\n                        type=\"text\"\r\n                        />\r\n                        <label className=\"edit-list-label\">Note:\r\n\r\n                        </label>\r\n                        <input  \r\n                           onChange={(e) => this.handleUpdateNote(e)}\r\n\r\n                           className=\"edit-note-input\"\r\n                           type=\"text\"\r\n                           name=\"note\"\r\n                        />\r\n                        <label className=\"edit-list-label\"\r\n                        \r\n                        >\r\n                            Price:\r\n\r\n                        </label>\r\n                        <input  \r\n                           onChange={(e) => this.handleUpdatePrice(e)}\r\n                           className=\"edit-price-input\"\r\n                           type=\"text\"\r\n                           name=\"price\"\r\n                        />\r\n                        <label \r\n                           className=\"edit-weight-input\"\r\n                        >\r\n                            Weight:\r\n\r\n                        </label>\r\n                        <input  \r\n                            onChange={(e) => this.handleUpdateWeight(e)}\r\n                           className=\"edit-weight-input\"\r\n                           type=\"text\"\r\n                           name=\"weight\"\r\n                        />\r\n                        <button className=\"edit-list-button\" type=\"submit\">\r\n                           Save changes\r\n                        </button>\r\n\r\n                    </div>\r\n                    <button\r\n                    onClick={this.handleClickCancel}\r\n                       className=\"edit-list-button\"\r\n                       type=\"button\"\r\n\r\n                    >{\" \"}\r\n                    cancel\r\n\r\n                    </button>\r\n\r\n                </form>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default EditList;","C:\\Users\\Packe\\Desktop\\node projects\\grocery list app\\src\\Components\\Features\\Features.js",[],"C:\\Users\\Packe\\Desktop\\node projects\\grocery list app\\src\\Components\\Footer\\Footer.js",[],"C:\\Users\\Packe\\Desktop\\node projects\\grocery list app\\src\\Components\\Register\\Register.js",[],"C:\\Users\\Packe\\Desktop\\node projects\\grocery list app\\src\\Components\\Lists\\List.js",[],"C:\\Users\\Packe\\Desktop\\node projects\\grocery list app\\src\\Components\\Modal\\Modal.js",["111","112","113"],"import React, {useContext} from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport Context from \"../../Context/Context\";\r\nimport ListData from \"../../../src/listData\";\r\n\r\n\r\nfunction Modal(props) {\r\n    let context = useContext(Context);\r\n\r\n    deleteList =(listid)  => {\r\n\r\n    }\r\n\r\n    let showHideClassName = props.show \r\n       ? \"modal display-block\" \r\n       : \"modal display-none\";\r\n\r\n       let list = context.list.find((list) => list.id === Number(props.match.params.id)) || {};\r\n\r\n    return (\r\n        <div className={showHideClassName}>\r\n            <section className=\"modal-main\">\r\n                <h2>\r\n                    {list.name}\r\n                </h2>\r\n                <h3 className=\"view-list-category\">category: {list.category}</h3>\r\n                <div className=\"list-textbox\">\r\n                <p>{list.note}</p>\r\n                </div>\r\n                <div className=\"list-textbox\">\r\n                <p>{list.price}</p>\r\n                </div>\r\n                <div className=\"list-textbox\">\r\n                <p>{list.weight}</p>\r\n                </div>\r\n                <div className=\"list-created-date\">\r\n                    <p>\r\n                        Created on:\r\n                        <span>\r\n                            {new Date (list.create_date).toLocalDateString()}\r\n                        </span>\r\n                    </p>\r\n\r\n                </div>\r\n                <div className=\"list-checkbox\">\r\n                    <p>\r\n                        <input\r\n                        className=\"checkmark\"\r\n                        type=\"checkbox\"\r\n                        checked={list.checked ? true : false}\r\n                        onClick={() => context.toggleComplete(list.id)}\r\n                         /> {\" \"}\r\n                         Completed?\r\n                    </p>\r\n\r\n                </div>\r\n                <div className=\"edit-delete-list\">\r\n                    <Link to = {`/edit-list/${list.id}`}>\r\n                        <button className=\"edit-button\">Edit</button>\r\n                    </Link>\r\n                    <button\r\n                       className=\"delete-button\"\r\n                       onClick={(e) => deleteList(Number(list.id), context.deleteList)}\r\n                    >\r\n                        Delete\r\n\r\n                    </button>\r\n\r\n                </div>\r\n                <button className=\"close-button\" onClick={props.handleClose}>\r\n                    Close\r\n\r\n                </button>\r\n\r\n\r\n            </section>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Modal","C:\\Users\\Packe\\Desktop\\node projects\\grocery list app\\src\\Components\\GroceryList\\GroceryList.js",[],{"ruleId":"114","replacedBy":"115"},{"ruleId":"116","replacedBy":"117"},{"ruleId":"118","severity":1,"message":"119","line":15,"column":8,"nodeType":"120","messageId":"121","endLine":15,"endColumn":12},{"ruleId":"118","severity":1,"message":"122","line":16,"column":8,"nodeType":"120","messageId":"121","endLine":16,"endColumn":16},{"ruleId":"118","severity":1,"message":"123","line":17,"column":8,"nodeType":"120","messageId":"121","endLine":17,"endColumn":13},{"ruleId":"124","severity":2,"message":"125","line":60,"column":19,"nodeType":"120","messageId":"126","endLine":60,"endColumn":23},{"ruleId":"124","severity":2,"message":"125","line":60,"column":31,"nodeType":"120","messageId":"126","endLine":60,"endColumn":35},{"ruleId":"118","severity":1,"message":"127","line":3,"column":8,"nodeType":"120","messageId":"121","endLine":3,"endColumn":24},{"ruleId":"118","severity":1,"message":"122","line":4,"column":8,"nodeType":"120","messageId":"121","endLine":4,"endColumn":16},{"ruleId":"118","severity":1,"message":"128","line":31,"column":13,"nodeType":"120","messageId":"121","endLine":31,"endColumn":17},{"ruleId":"118","severity":1,"message":"129","line":32,"column":13,"nodeType":"120","messageId":"121","endLine":32,"endColumn":17},{"ruleId":"118","severity":1,"message":"130","line":33,"column":13,"nodeType":"120","messageId":"121","endLine":33,"endColumn":21},{"ruleId":"118","severity":1,"message":"131","line":34,"column":13,"nodeType":"120","messageId":"121","endLine":34,"endColumn":18},{"ruleId":"118","severity":1,"message":"132","line":35,"column":13,"nodeType":"120","messageId":"121","endLine":35,"endColumn":19},{"ruleId":"118","severity":1,"message":"133","line":36,"column":13,"nodeType":"120","messageId":"121","endLine":36,"endColumn":20},{"ruleId":"134","severity":1,"message":"135","line":38,"column":44,"nodeType":"120","messageId":"136","endLine":38,"endColumn":48},{"ruleId":"118","severity":1,"message":"137","line":81,"column":13,"nodeType":"120","messageId":"121","endLine":81,"endColumn":22},{"ruleId":"118","severity":1,"message":"138","line":3,"column":8,"nodeType":"120","messageId":"121","endLine":3,"endColumn":18},{"ruleId":"118","severity":1,"message":"122","line":2,"column":8,"nodeType":"120","messageId":"121","endLine":2,"endColumn":16},{"ruleId":"118","severity":1,"message":"139","line":85,"column":14,"nodeType":"120","messageId":"121","endLine":85,"endColumn":16},{"ruleId":"118","severity":1,"message":"128","line":85,"column":18,"nodeType":"120","messageId":"121","endLine":85,"endColumn":22},{"ruleId":"118","severity":1,"message":"129","line":85,"column":24,"nodeType":"120","messageId":"121","endLine":85,"endColumn":28},{"ruleId":"118","severity":1,"message":"131","line":85,"column":30,"nodeType":"120","messageId":"121","endLine":85,"endColumn":35},{"ruleId":"118","severity":1,"message":"132","line":85,"column":37,"nodeType":"120","messageId":"121","endLine":85,"endColumn":43},{"ruleId":"118","severity":1,"message":"122","line":4,"column":8,"nodeType":"120","messageId":"121","endLine":4,"endColumn":16},{"ruleId":"124","severity":2,"message":"140","line":10,"column":5,"nodeType":"120","messageId":"126","endLine":10,"endColumn":15},{"ruleId":"124","severity":2,"message":"140","line":63,"column":40,"nodeType":"120","messageId":"126","endLine":63,"endColumn":50},"no-native-reassign",["141"],"no-negated-in-lhs",["142"],"no-unused-vars","'List' is defined but never used.","Identifier","unusedVar","'ListData' is defined but never used.","'Modal' is defined but never used.","no-undef","'list' is not defined.","undef","'ValidateionError' is defined but never used.","'name' is assigned a value but never used.","'note' is assigned a value but never used.","'category' is assigned a value but never used.","'price' is assigned a value but never used.","'weight' is assigned a value but never used.","'checked' is assigned a value but never used.","no-use-before-define","'list' was used before it was defined.","usedBeforeDefined","'nameError' is assigned a value but never used.","'Categories' is defined but never used.","'id' is assigned a value but never used.","'deleteList' is not defined.","no-global-assign","no-unsafe-negation"]