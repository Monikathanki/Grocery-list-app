[{"C:\\Users\\Packe\\Desktop\\node projects\\grocery list app\\src\\index.js":"1","C:\\Users\\Packe\\Desktop\\node projects\\grocery list app\\src\\App.js":"2","C:\\Users\\Packe\\Desktop\\node projects\\grocery list app\\src\\Context\\Context.js":"3","C:\\Users\\Packe\\Desktop\\node projects\\grocery list app\\src\\Components\\Header\\Header.js":"4","C:\\Users\\Packe\\Desktop\\node projects\\grocery list app\\src\\Components\\Errorpage\\ErrorPage.js":"5","C:\\Users\\Packe\\Desktop\\node projects\\grocery list app\\src\\Components\\NavBar\\Navbar.js":"6","C:\\Users\\Packe\\Desktop\\node projects\\grocery list app\\src\\Components\\Login\\Login.js":"7","C:\\Users\\Packe\\Desktop\\node projects\\grocery list app\\src\\Components\\ListForm\\ListForm.js":"8","C:\\Users\\Packe\\Desktop\\node projects\\grocery list app\\src\\Components\\Validation\\ValidationError.js":"9","C:\\Users\\Packe\\Desktop\\node projects\\grocery list app\\src\\listData.js":"10","C:\\Users\\Packe\\Desktop\\node projects\\grocery list app\\src\\Components\\Navbar\\Navbar.js":"11","C:\\Users\\Packe\\Desktop\\node projects\\grocery list app\\src\\Components\\BackButton\\BackButton.js":"12","C:\\Users\\Packe\\Desktop\\node projects\\grocery list app\\src\\Components\\CategoriesPage\\CategoriesPage.js":"13","C:\\Users\\Packe\\Desktop\\node projects\\grocery list app\\src\\Components\\EditList\\EditList.js":"14","C:\\Users\\Packe\\Desktop\\node projects\\grocery list app\\src\\Components\\Features\\Features.js":"15","C:\\Users\\Packe\\Desktop\\node projects\\grocery list app\\src\\Components\\Footer\\Footer.js":"16","C:\\Users\\Packe\\Desktop\\node projects\\grocery list app\\src\\Components\\Register\\Register.js":"17","C:\\Users\\Packe\\Desktop\\node projects\\grocery list app\\src\\Components\\Lists\\List.js":"18","C:\\Users\\Packe\\Desktop\\node projects\\grocery list app\\src\\Components\\Modal\\Modal.js":"19","C:\\Users\\Packe\\Desktop\\node projects\\grocery list app\\src\\Components\\GroceryList\\GroceryList.js":"20"},{"size":264,"mtime":1607837392307,"results":"21","hashOfConfig":"22"},{"size":4622,"mtime":1608218305766,"results":"23","hashOfConfig":"22"},{"size":450,"mtime":1608218550868,"results":"24","hashOfConfig":"22"},{"size":1025,"mtime":1607819956872,"results":"25","hashOfConfig":"22"},{"size":589,"mtime":1607744265288,"results":"26","hashOfConfig":"22"},{"size":752,"mtime":1607834945134,"results":"27","hashOfConfig":"22"},{"size":1312,"mtime":1607750990698,"results":"28","hashOfConfig":"22"},{"size":3682,"mtime":1608216528822,"results":"29","hashOfConfig":"22"},{"size":218,"mtime":1607813198273,"results":"30","hashOfConfig":"22"},{"size":1690,"mtime":1607902175337,"results":"31","hashOfConfig":"22"},{"size":1420,"mtime":1607839224416,"results":"32","hashOfConfig":"22"},{"size":261,"mtime":1607909587746,"results":"33","hashOfConfig":"22"},{"size":2533,"mtime":1608218909987,"results":"34","hashOfConfig":"22"},{"size":4211,"mtime":1608218944391,"results":"35","hashOfConfig":"22"},{"size":1298,"mtime":1607956238915,"results":"36","hashOfConfig":"22"},{"size":191,"mtime":1607905084759,"results":"37","hashOfConfig":"22"},{"size":1346,"mtime":1607906930562,"results":"38","hashOfConfig":"22"},{"size":3322,"mtime":1608002132320,"results":"39","hashOfConfig":"22"},{"size":2566,"mtime":1608135780888,"results":"40","hashOfConfig":"22"},{"size":3269,"mtime":1608218749721,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"d8wnue",{"filePath":"45","messages":"46","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"44"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"44"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"44"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"44"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"C:\\Users\\Packe\\Desktop\\node projects\\grocery list app\\src\\index.js",[],["88","89"],"C:\\Users\\Packe\\Desktop\\node projects\\grocery list app\\src\\App.js",["90","91","92"],"import React from \"react\";\nimport \"./App.css\"\nimport {Route } from \"react-router-dom\"\nimport Header from \"./Components/Header/Header\"\nimport Context from \"./Context/Context\"\nimport ErrorPage from \"./Components/Errorpage/ErrorPage\"\nimport Navbar from \"./Components/Navbar/Navbar\"\nimport Login from \"./Components/Login/Login\";\nimport ListForm from \"./Components/ListForm/ListForm\";\nimport CategoriesPage from \"./Components/CategoriesPage/CategoriesPage\";\nimport EditList from \"./Components/EditList/EditList\";\nimport Features from \"./Components/Features/Features\";\nimport Footer from \"./Components/Footer/Footer\";\nimport Register from \"./Components/Register/Register\";\nimport List from \"./Components/Lists/List\"\nimport ListData from \"./listData\"\nimport Modal from \"./Components/Modal/Modal\"\nimport GroceryList from \"./Components/GroceryList/GroceryList\"\n\nclass App extends React.Component {\n  \n  state = {\n    user: {\n      userName: \"\",\n      user_id: \"\",\n    },\n    lists: [],\n    categories: [],\n    //toggleComplete: (id) => {\n      //this.setState({\n       // lists: this.state.listData.map(list) => {\n         // if(list.id === id) {\n            //list.checked = !list.checked;\n            //let checked = list.checked;\n            //let listcheck = {id,checked}\n         //}\n          //return lists\n        //}\n      //})\n    //}\n\n  };\n\n  handleLogout = () => {\n\n  }\n\n  setLoggedInUserLists = (lists) => {\n\n  }\n\n  setUser = () => {\n    \n  }\n\n  createList = (list) => {\n    \n  }\n\n   //const deleteList = (listid) => {\n    //newList = list.splice(listid, 1);\n    //this.setState({\n     // lists: newList\n    //})\n    \n  //};\n\n  updateList = (editList) => {\n    \n  };\n  render() {\n    /* remove state from handler */\n        let contextValue = {\n         lists: this.state.lists,\n         categories: this.state.categories,\n         user: this.state.user,\n         setLoggedInUserLists: this.state.setLoggedInUserLists,\n         setUser: this.state.setUser,\n         setCategories: this.setCategories,\n         handleLogout: this.handleLogout,\n         toggleComplete: this.toggleComplete,\n         createList: this.createList,\n         deleteList: this.deleteList,\n          updateList: this.updateList,\n         listData: this.lisdata,\n         CategoriesData: this.categoriesData\n    };\n    return (\n      \n     <Context.Provider value = {contextValue}> \n        <ErrorPage>\n          <div className=\"App\">\n            <Route path=\"/\" component={Navbar} />\n            \n            <Route exact path=\"/\" component={Header} />\n            <Route exact path=\"/login\" component={ Login}/>\n            \n            <Route exact\n            path={[\"/add-list\", \"/add-list/:category\"]}\n            component = {ListForm}\n            />\n            <Route exact path=\"/register\" component={Register} />\n            <Route\n            exact\n            path=\"/grocery-list-categories\"\n            component ={CategoriesPage}\n             />\n             <main>\n               <div className=\"main-lists\">\n                 <Route\n                   exact\n                   path={[\n                     \"/gorcery-list\",\n                     \"/gorcery-list/:id\",\n                     \"/complated-list\",\n                     \"/complated-lists/:id\"\n\n                   ]}\n                   render={(props) => <GroceryList{...props} checked={false} />}\n                 \n                 />\n                 <Route\n                   exact\n                   path={[\n                     \"/gorcery-list\",\n                     \"/gorcery-list/:id\",\n                     \"/complated-list\",\n                     \"/complated-lists/:id\"\n\n                   ]}\n                   render={(props) => <GroceryList{...props} checked={true} />}\n                 \n                 />\n                 <div className=\"view-list\">\n                   <Route\n                     exact\n                     path={[\"/grocery-list/:id\", \"/completed-list/:id\"]}\n                     render={(props) => (\n                       <list {...props} selected={this.state.selected} />\n                     )}\n                   >\n\n                   </Route>\n\n                 </div>\n\n               </div>\n               <Route \n                 exact \n                 path=\"/edit-list/:id\"\n                 render={(props) => (\n                   <EditList />\n                 )}\n               />\n               <Route exact path=\"/\" component={Features} />\n\n             </main>\n\n             <Route path=\"/\" component={Footer}/>\n            \n\n          </div>\n        </ErrorPage>\n      </Context.Provider>\n      \n    )\n  }\n}\n\nexport default App\n\n\n","C:\\Users\\Packe\\Desktop\\node projects\\grocery list app\\src\\Context\\Context.js",[],"C:\\Users\\Packe\\Desktop\\node projects\\grocery list app\\src\\Components\\Header\\Header.js",[],"C:\\Users\\Packe\\Desktop\\node projects\\grocery list app\\src\\Components\\Errorpage\\ErrorPage.js",[],"C:\\Users\\Packe\\Desktop\\node projects\\grocery list app\\src\\Components\\NavBar\\Navbar.js",[],"C:\\Users\\Packe\\Desktop\\node projects\\grocery list app\\src\\Components\\Login\\Login.js",[],"C:\\Users\\Packe\\Desktop\\node projects\\grocery list app\\src\\Components\\ListForm\\ListForm.js",["93","94"],"import React, { Component } from \"react\";\r\nimport Context from \"../../Context/Context\";\r\nimport ValidateionError from \"../Validation/ValidationError\";\r\n\r\nimport BackButton from \"../BackButton/BackButton\";\r\nimport \"./ListForm.css\";\r\nclass ListForm extends Component {\r\n    static contextType = Context;\r\n    \r\n  static defaultProps = {\r\n    match: {\r\n      params: {\r\n        category: \"\",\r\n      },\r\n    },\r\n  };\r\n  state = {\r\n    selCategory: this.props.match.params.category,\r\n    lists: {\r\n      name: \"\",\r\n      touched: false,\r\n    },\r\n    name: \"\",\r\n    note: \"\",\r\n    price: \"\",\r\n    weight: \"\",\r\n    category: \"\",\r\n  };\r\n  handleChange = (e) => {\r\n    this.setState({[e.target.name]: e.target.value})\r\n  }\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const {name, note, category, price, weight} = this.state\r\n    const list = {name, note, category, price, weight}\r\n    console.log(list)\r\n    // let checked = false;\r\n    this.context.createList(list);\r\n    this.props.history.push(\"/grocery-list\");\r\n    // this.setState ({\r\n    //     lists : list\r\n    // })\r\n  };\r\n  // validateName = () => {\r\n  //     let listName = this.state.name.value.trim();\r\n  //     if(listName.name === 0) {\r\n  //         return \"Name your list!\";\r\n  //     } else if (listName.length < 3) {\r\n  //         return \"your list must be at least 3 charecters long\";\r\n  //     } else if (listName.lenght > 15) {\r\n  //         return \"your list cannot exceed 15 charecters\";\r\n  //     }\r\n  // };\r\n  // updateList = (name) => {\r\n  //     this.setState({\r\n  //         lists: {\r\n  //         }\r\n  //     })\r\n  // }\r\n  changeCategory = (e) => {\r\n    let categoryId = Number(e.target.value);\r\n    let category = this.context.categories.find((c) => c.id === categoryId);\r\n    this.setState({\r\n      selCategory: category.category,\r\n      category_id: category.id,\r\n    });\r\n  };\r\n  render() {\r\n    console.log(this.context);\r\n    let { categories } = this.context;\r\n    console.log(categories);\r\n    // let nameError = this.validateName();\r\n    return (\r\n      <div className=\"add-list\">\r\n        <form className=\"add-list-form\" onSubmit={this.handleSubmit}>\r\n          <h2>Create Grocery list</h2>\r\n          <div className=\"add-list-section\">\r\n            <label className=\"list-label\">Name:</label>\r\n            <input type=\"text\" name=\"name\" className=\"add-name-input\" value={this.state.name} onChange={this.handleChange}/>\r\n            <label className=\"list-label\">Note:</label>\r\n            <input className=\"add-note-input\" type=\"text\" name=\"note\" value={this.state.note} onChange={this.handleChange}/>\r\n            <label className=\"list-label\">Price:</label>\r\n            <input className=\"add-price-input\" type=\"text\" name=\"price\" value={this.state.price} onChange={this.handleChange}/>\r\n            <label className=\"list-label\">Weight:</label>\r\n            <input className=\"add-Weight-input\" type=\"text\" name=\"weight\" value={this.state.weight} onChange={this.handleChange}/>\r\n            <select\r\n              name=\"category_id\"\r\n              id=\"category-dropdown\"\r\n              name=\"category\"\r\n            >\r\n              \r\n                <option>\r\n                  \r\n                </option>\r\n                <option>\r\n                  \r\n                </option>\r\n                <option>\r\n                  \r\n                </option>\r\n                        \r\n              \r\n            </select>\r\n            <button className=\"add-list-button\" type=\"submit\">\r\n              Create List\r\n            </button>\r\n          </div>\r\n        </form>\r\n        <BackButton {...this.props} className=\"back-button\" />\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default ListForm;","C:\\Users\\Packe\\Desktop\\node projects\\grocery list app\\src\\Components\\Validation\\ValidationError.js",[],"C:\\Users\\Packe\\Desktop\\node projects\\grocery list app\\src\\listData.js",[],"C:\\Users\\Packe\\Desktop\\node projects\\grocery list app\\src\\Components\\Navbar\\Navbar.js",[],"C:\\Users\\Packe\\Desktop\\node projects\\grocery list app\\src\\Components\\BackButton\\BackButton.js",[],["95","96"],"C:\\Users\\Packe\\Desktop\\node projects\\grocery list app\\src\\Components\\CategoriesPage\\CategoriesPage.js",[],"C:\\Users\\Packe\\Desktop\\node projects\\grocery list app\\src\\Components\\EditList\\EditList.js",["97","98","99","100","101"],"import React from \"react\";\r\nimport Context from \"../../Context/Context\";\r\n\r\n\r\nclass EditList extends React.Component {\r\n    static ContextType = Context;\r\n\r\n    state = {\r\n        id:\"\",\r\n        name: \"\",\r\n        note: \"\",\r\n        price: \"\",\r\n        weight: \"\",\r\n        category: \"\",\r\n        category_id:\"\",\r\n        checked:\"\"\r\n\r\n    };\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        let {\r\n            id,\r\n            name,\r\n            note,\r\n            price,\r\n            weight,\r\n            category,\r\n            checked,\r\n            category_id,\r\n            \r\n\r\n        } = this.state;\r\n        let newList = {\r\n            id,\r\n            name,\r\n            note,\r\n            price,\r\n            weight,\r\n            category,\r\n            checked,\r\n            category_id,\r\n            \r\n        }\r\n        this.resetFields();\r\n        this.context.updateList(newList);\r\n        this.props.history.push(`/gorcery-list/${this.props.match.params.id}`)\r\n         this.setState({newList})\r\n    }\r\n\r\n    resetFields = () => {\r\n        this.setState ({\r\n            id:\"\",\r\n            name: \"\",\r\n            note: \"\",\r\n            price: \"\",\r\n            weight: \"\"\r\n        })\r\n    }\r\n    handleUpdateName = (e) => {\r\n        this.setState({\r\n            name: e.target.value,\r\n\r\n        });\r\n    }\r\n\r\n    handleUpdateNote = (e) => {\r\n        this.setState({\r\n            note: e.target.value,\r\n        })\r\n    }\r\n\r\n    handleupdatePrice = (e) => {\r\n        this.setState({\r\n            price: e.target.value,\r\n        })\r\n    }\r\n\r\n    handleClickCancel = () => {\r\n        this.props.history.push(`/grocery-list/${this.props.match.params.id}`);\r\n    }\r\n\r\n    render() {\r\n        let {id, name, note, price, weight} = this.state;\r\n        return(\r\n            <div className=\"edit-lists\">\r\n                <form onSubmit ={(e) => this.handleSubmit(e)} clasName=\"edit-form\">\r\n                    <h2>Edit List</h2>\r\n                    <div className=\"edit-section\">\r\n                        <label className=\"edit-list-label\">Name: \r\n\r\n                        </label>\r\n                        <input  \r\n                        onChange={(e) => this.handleUpdateName(e)}\r\n                        className=\"edit-list-input\"\r\n                        name = \"name\"\r\n                        type=\"text\"\r\n                        />\r\n                        <label className=\"edit-list-label\">Note:\r\n\r\n                        </label>\r\n                        <input  \r\n                           onChange={(e) => this.handleUpdateNote(e)}\r\n\r\n                           className=\"edit-note-input\"\r\n                           type=\"text\"\r\n                           name=\"note\"\r\n                        />\r\n                        <label className=\"edit-list-label\"\r\n                        \r\n                        >\r\n                            Price:\r\n\r\n                        </label>\r\n                        <input  \r\n                           onChange={(e) => this.handleUpdatePrice(e)}\r\n                           className=\"edit-price-input\"\r\n                           type=\"text\"\r\n                           name=\"price\"\r\n                        />\r\n                        <label \r\n                           className=\"edit-weight-input\"\r\n                        >\r\n                            Weight:\r\n\r\n                        </label>\r\n                        <input  \r\n                            onChange={(e) => this.handleUpdateWeight(e)}\r\n                           className=\"edit-weight-input\"\r\n                           type=\"text\"\r\n                           name=\"weight\"\r\n                        />\r\n                        <button className=\"edit-list-button\" type=\"submit\">\r\n                           Save changes\r\n                        </button>\r\n\r\n                    </div>\r\n                    <button\r\n                    onClick={this.handleClickCancel}\r\n                       className=\"edit-list-button\"\r\n                       type=\"button\"\r\n\r\n                    >{\" \"}\r\n                    cancel\r\n\r\n                    </button>\r\n\r\n                </form>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default EditList;","C:\\Users\\Packe\\Desktop\\node projects\\grocery list app\\src\\Components\\Features\\Features.js",[],"C:\\Users\\Packe\\Desktop\\node projects\\grocery list app\\src\\Components\\Footer\\Footer.js",[],"C:\\Users\\Packe\\Desktop\\node projects\\grocery list app\\src\\Components\\Register\\Register.js",[],"C:\\Users\\Packe\\Desktop\\node projects\\grocery list app\\src\\Components\\Lists\\List.js",[],"C:\\Users\\Packe\\Desktop\\node projects\\grocery list app\\src\\Components\\Modal\\Modal.js",["102"],"import React, {useContext} from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport Context from \"../../Context/Context\";\r\nimport ListData from \"../../../src/listData\";\r\n\r\n\r\nfunction Modal(props) {\r\n    let context = useContext(Context);\r\n\r\n   // deleteList =(listid)  => {\r\n\r\n   // }\r\n\r\n    let showHideClassName = props.show \r\n       ? \"modal display-block\" \r\n       : \"modal display-none\";\r\n\r\n       let list = context.list.find((list) => list.id === Number(props.match.params.id)) || {};\r\n\r\n    return (\r\n        <div className={showHideClassName}>\r\n            <section className=\"modal-main\">\r\n                <h2>\r\n                    {list.name}\r\n                </h2>\r\n                <h3 className=\"view-list-category\">category: {list.category}</h3>\r\n                <div className=\"list-textbox\">\r\n                <p>{list.note}</p>\r\n                </div>\r\n                <div className=\"list-textbox\">\r\n                <p>{list.price}</p>\r\n                </div>\r\n                <div className=\"list-textbox\">\r\n                <p>{list.weight}</p>\r\n                </div>\r\n                <div className=\"list-created-date\">\r\n                    <p>\r\n                        Created on:\r\n                        <span>\r\n                            {new Date (list.create_date).toLocalDateString()}\r\n                        </span>\r\n                    </p>\r\n\r\n                </div>\r\n                <div className=\"list-checkbox\">\r\n                    <p>\r\n                        <input\r\n                        className=\"checkmark\"\r\n                        type=\"checkbox\"\r\n                        checked={list.checked ? true : false}\r\n                        onClick={() => context.toggleComplete(list.id)}\r\n                         /> {\" \"}\r\n                         Completed?\r\n                    </p>\r\n\r\n                </div>\r\n                <div className=\"edit-delete-list\">\r\n                    <Link to = {`/edit-list/${list.id}`}>\r\n                        <button className=\"edit-button\">Edit</button>\r\n                    </Link>\r\n                    <button\r\n                       className=\"delete-button\"\r\n                       //onClick={(e) => deleteList(Number(list.id), context.deleteList)}\r\n                    >\r\n                        Delete\r\n\r\n                    </button>\r\n\r\n                </div>\r\n                <button className=\"close-button\" onClick={props.handleClose}>\r\n                    Close\r\n\r\n                </button>\r\n\r\n\r\n            </section>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Modal","C:\\Users\\Packe\\Desktop\\node projects\\grocery list app\\src\\Components\\GroceryList\\GroceryList.js",[],{"ruleId":"103","replacedBy":"104"},{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","severity":1,"message":"108","line":15,"column":8,"nodeType":"109","messageId":"110","endLine":15,"endColumn":12},{"ruleId":"107","severity":1,"message":"111","line":16,"column":8,"nodeType":"109","messageId":"110","endLine":16,"endColumn":16},{"ruleId":"107","severity":1,"message":"112","line":17,"column":8,"nodeType":"109","messageId":"110","endLine":17,"endColumn":13},{"ruleId":"107","severity":1,"message":"113","line":3,"column":8,"nodeType":"109","messageId":"110","endLine":3,"endColumn":24},{"ruleId":"114","severity":1,"message":"115","line":89,"column":15,"nodeType":"116","endLine":89,"endColumn":30},{"ruleId":"103","replacedBy":"117"},{"ruleId":"105","replacedBy":"118"},{"ruleId":"107","severity":1,"message":"119","line":84,"column":14,"nodeType":"109","messageId":"110","endLine":84,"endColumn":16},{"ruleId":"107","severity":1,"message":"120","line":84,"column":18,"nodeType":"109","messageId":"110","endLine":84,"endColumn":22},{"ruleId":"107","severity":1,"message":"121","line":84,"column":24,"nodeType":"109","messageId":"110","endLine":84,"endColumn":28},{"ruleId":"107","severity":1,"message":"122","line":84,"column":30,"nodeType":"109","messageId":"110","endLine":84,"endColumn":35},{"ruleId":"107","severity":1,"message":"123","line":84,"column":37,"nodeType":"109","messageId":"110","endLine":84,"endColumn":43},{"ruleId":"107","severity":1,"message":"111","line":4,"column":8,"nodeType":"109","messageId":"110","endLine":4,"endColumn":16},"no-native-reassign",["124"],"no-negated-in-lhs",["125"],"no-unused-vars","'List' is defined but never used.","Identifier","unusedVar","'ListData' is defined but never used.","'Modal' is defined but never used.","'ValidateionError' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute",["124"],["125"],"'id' is assigned a value but never used.","'name' is assigned a value but never used.","'note' is assigned a value but never used.","'price' is assigned a value but never used.","'weight' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]